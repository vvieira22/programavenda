package View.Cadastro;


import Controladores.ControladorVendas;
import Model.DAO.ProdutoDAO;
import Model.ItemVenda;
import Model.Tabelas.ModeloTabelaItemVenda;
import java.util.ArrayList;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;

public class cadastroItemVenda extends javax.swing.JDialog {
    ControladorVendas controladorvendas;
    JTable tabela;
    ModeloTabelaItemVenda modelotabelaitemvenda;
    JTextField campototal;
    int total=0;
    public cadastroItemVenda(java.awt.Frame parent, boolean modal,JTable tabela,JTextField campototal) {
        super(parent, modal);       
        
        initComponents();    
        controladorvendas=new ControladorVendas();
        this.tabela=tabela;
        this.campototal=campototal;
    }
    
    public  ArrayList<ItemVenda> retornarArrayItemVenda(){
        return controladorvendas.retornarArrayAntesDeCadastrarNoBanco();
    }
   public void atualizarQuantidade(){
        if(modelotabelaitemvenda.retornarItensVenda().size()>0){
        for(int i=0;i<modelotabelaitemvenda.retornarItensVenda().size();i++){
            ProdutoDAO.getInstance().atualizarQuantidadeProduto(modelotabelaitemvenda.retornarItensVenda().get(i).getQuantidade(), modelotabelaitemvenda.retornarItensVenda().get(i).getCodigo_produto());
        }
        }
        else
        JOptionPane.showMessageDialog(null, "teste");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        botaoConfirmar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        nomeProduto = new javax.swing.JLabel();
        campoQuantidade = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel4.setText("Quantidade:");

        jLabel15.setText("*");

        jLabel12.setText("Campos com * são Obrigatórios !");

        botaoConfirmar.setText("Confirmar");
        botaoConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConfirmarActionPerformed(evt);
            }
        });

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 102, 0));
        jLabel16.setText("Cadastro de Item");

        jLabel1.setText("Id Produto");

        campoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIdActionPerformed(evt);
            }
        });
        campoId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoIdKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoIdKeyReleased(evt);
            }
        });

        jLabel17.setText("*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(botaoCancelar)
                .addGap(120, 120, 120)
                .addComponent(botaoConfirmar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12))))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel17))
                            .addComponent(nomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel15)
                            .addComponent(campoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoConfirmar)
                    .addComponent(botaoCancelar))
                .addGap(97, 97, 97))
        );

        setBounds(0, 0, 291, 209);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void campoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoIdActionPerformed

    
 
    private void botaoConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConfirmarActionPerformed

        if(ProdutoDAO.getInstance().retornarQuantidadeDoProduto(Integer.parseInt(campoId.getText()))>=Integer.parseInt(campoQuantidade.getText())){
            
        
        
        
        
        if(controladorvendas.verificarSeProdutoJaExiste(Integer.parseInt(campoId.getText()))==true){
            
           if(controladorvendas.verificarSeProdutoJaExiste(Integer.parseInt(campoId.getText()))==true){
                for(int i =0;i<controladorvendas.receberArraydeProdutosAtualizada();i++){   
                    if(controladorvendas.retornarProdutos().get(i).getCodigo()==Integer.parseInt(campoId.getText())){
           try {
                controladorvendas.inserirNaArrayItemVenda(Integer.parseInt(campoId.getText()), Integer.parseInt(campoQuantidade.getText()), controladorvendas.retornarProdutos().get(i).getPreco(),controladorvendas.retornarProdutos().get(i).getPreco()*Integer.parseInt(campoQuantidade.getText()));
                modelotabelaitemvenda=new ModeloTabelaItemVenda(controladorvendas.retornarArrayAntesDeCadastrarNoBanco());
                tabela.setModel(modelotabelaitemvenda);
                campototal.setText(Float.toString(retornarTotal()) );
                
                dispose();
                 JOptionPane.showMessageDialog(rootPane, "Inserido com Sucesso !");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,e);
            JOptionPane.showMessageDialog(this,"Algo deu errado, revise os campos novamente!");
            }          
                    }
                }
            }
        }
        }
        else{
            JOptionPane.showMessageDialog(null,"Quantidade em estoque menor que a pedida");
        }
    }//GEN-LAST:event_botaoConfirmarActionPerformed

    public ItemVenda retornarProdutoPeloIndice(int i){
        return modelotabelaitemvenda.obterProduto(i);
    }
    
    public float retornarTotal(){
         total=0;
         
        for(int i=0;i<modelotabelaitemvenda.getRowCount();i++){
            total+=controladorvendas.retornarArrayAntesDeCadastrarNoBanco().get(i).getTotalItem();       
        }
   return total;
    }
    public int retornarLinhas(){
        return modelotabelaitemvenda.getRowCount();
    }
    
    
    private void campoIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoIdKeyTyped
       
    }//GEN-LAST:event_campoIdKeyTyped

    private void campoIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoIdKeyReleased
       if(controladorvendas.verificarSeProdutoJaExiste(Integer.parseInt(campoId.getText()))==true){
           for(int i =0;i<controladorvendas.receberArraydeProdutosAtualizada();i++){
               if(controladorvendas.retornarProdutos().get(i).getCodigo()==Integer.parseInt(campoId.getText())){
                   nomeProduto.setText(controladorvendas.retornarProdutos().get(i).getNome());
               }
       }
        }
       else{
           nomeProduto.setText("");
       }
    }//GEN-LAST:event_campoIdKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastroItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastroItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastroItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastroItemVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                cadastroItemVenda dialog = new cadastroItemVenda(new javax.swing.JFrame(), true,null,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoConfirmar;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoQuantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel nomeProduto;
    // End of variables declaration//GEN-END:variables
}
